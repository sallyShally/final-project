import React from 'react';
import { withStyles } from '@material-ui/core/styles';
import Button from '@material-ui/core/Button';
import Dialog from '@material-ui/core/Dialog';
import MuiDialogTitle from '@material-ui/core/DialogTitle';
import MuiDialogContent from '@material-ui/core/DialogContent';
import MuiDialogActions from '@material-ui/core/DialogActions';
import IconButton from '@material-ui/core/IconButton';
import CloseIcon from '@material-ui/icons/Close';
import Typography from '@material-ui/core/Typography';
import clsx from 'clsx';

const styles = (theme) => ({
    root: {
        margin: 0,
        padding: theme.spacing(2),
    },
    closeButton: {
        position: 'absolute',
        right: theme.spacing(1),
        top: theme.spacing(1),
        color: theme.palette.grey[500],
    },
});

const DialogTitle = withStyles(styles)((props) => {
    const { children, classes, onClose, ...other } = props;
    return (
        <MuiDialogTitle disableTypography className={classes.root} {...other}>
            <Typography variant="h6">{children}</Typography>
            {onClose ? (
                <IconButton aria-label="close" className={classes.closeButton} onClick={onClose}>
                    <CloseIcon />
                </IconButton>
            ) : null}
        </MuiDialogTitle>
    );
});

const DialogContent = withStyles((theme) => ({
    root: {
        padding: theme.spacing(0)
    }
}))(MuiDialogContent);

const DialogActions = withStyles((theme) => ({
    root: {
        margin: 0,
        padding: theme.spacing(1),
    },
}))(MuiDialogActions);

function CustomizedDialogs({ open, onClose, onSubmit, title, component: Component, hideTitle, hideActions, maxWidth = "md", classes }) {
    return (
        <Dialog onClose={onClose} aria-labelledby="customized-dialog-title" open={open} maxWidth={maxWidth}>
            {
                !hideTitle &&
                <DialogTitle id="customized-dialog-title" onClose={onClose}>
                    {title}
                </DialogTitle>
            }
            <DialogContent className={clsx({
                [classes.contentWithPadding]: !hideTitle || !hideActions,
                [classes.contentWithoutPadding]: hideTitle && hideActions
            })}>
                <Component />
            </DialogContent>
            {
                !hideActions &&
                <DialogActions>
                    <Button onClick={onClose} color="primary">
                        Cancel
                    </Button>
                    <Button onClick={onSubmit} color="primary">
                        Submit
                    </Button>
                </DialogActions>
            }
        </Dialog>
    );
}

export default withStyles((theme) => ({
    contentWithPadding: {
        padding: theme.spacing(2),
    },
    contentWithoutPadding: {
        padding: theme.spacing(0),
    }
}))(CustomizedDialogs);