{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\final project\\\\my final perfect pro\\\\myapp\\\\src\\\\components\\\\navbar.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport { webHeader } from '../utils/data';\nimport '../styles/Components/navbar.css';\nimport { useNavigate } from 'react-router-dom';\nimport { faCaretDown } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// import Dropdown from 'react-bootstrap/Dropdown'\nexport function Navbar1(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Navbar1\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"allItems1\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"pagesItemsUl1\",\n        children: props.navItems.map((curr, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: curr.url,\n            children: [\" \", curr.Icon, \"  \", curr.title, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 38\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n}\n_c = Navbar1;\nexport function Navbar2(props) {\n  _s();\n\n  useEffect(() => {\n    document.querySelector('.headerOfWeb').innerHTML = webHeader.innerHTML;\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Navbar2\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"allItems2\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"headerOfWeb\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \" speak your heart out \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"pagesItemsUl2\",\n        children: props.navItems.map((curr, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: curr.url,\n            children: curr.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 38\n          }, this), \" \"]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Navbar2, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c2 = Navbar2;\nexport function AskNav(props) {\n  _s2();\n\n  const navigate = useNavigate();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"askNavDiv\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"allItems\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"Ulnames\",\n        children: props.navItems.map((curr1, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n          id: \"myLi\",\n          children: [\" \", curr1.title, \" \", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faCaretDown\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 62\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"optionUl\",\n            children: curr1.options.map((curr2, z) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"url\",\n                \"data-url\": '/Ask/' + curr2.url,\n                onClick: () => {\n                  navigate('/Ask/' + curr2.url);\n                },\n                children: curr2.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 37\n              }, this)\n            }, z, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 116\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n} // export function AskIcons(props: { navItems: { Icon: JSX.Element, url: string, options: { title: string, url: string }[] }[] }) {\n//     const navigate = useNavigate()\n//     function myFunction() {\n//         const myElement = document.getElementById('#links')!;\n//         myElement.classList.toggle(\"show\");\n//     }\n//     // // Close the dropdown menu if the user clicks outside of it\n//     // window.onclick = function (e: React.MouseEvent) {\n//     //     if (!event.target.matches('.dropicon')) {\n//     //         var dropdowns = document.getElementsByClassName(\"dropdown-content\");\n//     //         var i;\n//     //         for (i = 0; i < dropdowns.length; i++) {\n//     //             var openDropdown = dropdowns[i];\n//     //             if (openDropdown.classList.contains('show')) {\n//     //                 openDropdown.classList.remove('show');\n//     //             }\n//     //         }\n//     //     }\n//     // }\n//     return (\n//         <div className=\"divAroundAll\">\n//             <ul className='IconsUl'>\n//                 {props.navItems.map((curr1, i) => (\n//                     <li key={i}> {curr1.Icon} <FontAwesomeIcon className='dropicon' onClick={myFunction} icon={faCaretDown} /> <ul className='optionUl'>\n//                         {curr1.options.map((curr2, z) => (\n//                             <li id='links' key={z}>\n//                                 <a className='url' href='curr2.url'>\n//                                     {curr2.title}\n//                                 </a>\n//                             </li>\n//                         ))}\n//                     </ul>\n//                     </li>\n//                 ))}\n//             </ul>\n//         </div >\n//     )\n// }\n\n_s2(AskNav, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n\n_c3 = AskNav;\nexport function AskIcons(props) {\n  _s3();\n\n  const navigate = useNavigate();\n\n  function myFunction() {\n    const myElement = document.getElementById('#links');\n    myElement.classList.toggle(\"show\");\n  } // Close the dropdown menu if the user clicks outside of it\n\n\n  window.onclick = function (e) {\n    if (!event.target.matches('.dropicon')) {\n      var dropdowns = document.getElementsByClassName(\"dropdown-content\");\n      var i;\n\n      for (i = 0; i < dropdowns.length; i++) {\n        var openDropdown = dropdowns[i];\n\n        if (openDropdown.classList.contains('show')) {\n          openDropdown.classList.remove('show');\n        }\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Dropdown, {\n    children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n      variant: \"success\",\n      id: \"dropdown-basic\",\n      children: \"Dropdown Button\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n      children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n        href: \"#/action-1\",\n        children: \"Action\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n        href: \"#/action-2\",\n        children: \"Another action\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n        href: \"#/action-3\",\n        children: \"Something else\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 9\n  }, this);\n}\n\n_s3(AskIcons, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n\n_c4 = AskIcons;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Navbar1\");\n$RefreshReg$(_c2, \"Navbar2\");\n$RefreshReg$(_c3, \"AskNav\");\n$RefreshReg$(_c4, \"AskIcons\");","map":{"version":3,"sources":["C:/Users/USER/Desktop/final project/my final perfect pro/myapp/src/components/navbar.tsx"],"names":["useEffect","webHeader","useNavigate","faCaretDown","FontAwesomeIcon","Navbar1","props","navItems","map","curr","i","url","Icon","title","Navbar2","document","querySelector","innerHTML","AskNav","navigate","curr1","options","curr2","z","AskIcons","myFunction","myElement","getElementById","classList","toggle","window","onclick","e","event","target","matches","dropdowns","getElementsByClassName","length","openDropdown","contains","remove"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { webHeader } from '../utils/data';\r\nimport '../styles/Components/navbar.css';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { faCaretDown, faCaretSquareLeft } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { Signup } from './signup';\r\nimport { DropdownMenu, MenuItem } from 'react-bootstrap-dropdown-menu'\r\n// import Dropdown from 'react-bootstrap/Dropdown'\r\n\r\nexport function Navbar1(props: { navItems: { Icon: JSX.Element, title: string, url: string }[] }) {\r\n    return (\r\n        <div className=\"Navbar1\">\r\n            <div className=\"allItems1\">\r\n                <ul className=\"pagesItemsUl1\">\r\n                    {props.navItems.map((curr, i) => (\r\n                        <li key={i}> <a href={curr.url}> {curr.Icon}  {curr.title} </a></li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n\r\n\r\n\r\n\r\n\r\n    );\r\n}\r\n\r\n\r\n\r\nexport function Navbar2(props: { navItems: { title: string, url: string }[] }) {\r\n\r\n    useEffect(() => {\r\n        (document.querySelector('.headerOfWeb') as HTMLElement).innerHTML = webHeader.innerHTML\r\n    }, []);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"Navbar2\">\r\n            <div className=\"allItems2\">\r\n                <div className='headerOfWeb'>\r\n                    <h1> speak your heart out </h1>\r\n                </div>\r\n\r\n                <ul className=\"pagesItemsUl2\">\r\n                    {props.navItems.map((curr, i) => (\r\n                        <li key={i}> <a href={curr.url}>{curr.title}\r\n                        </a> </li>\r\n                    ))}\r\n\r\n                </ul>\r\n\r\n\r\n            </div>\r\n\r\n        </div >\r\n\r\n    )\r\n\r\n}\r\n\r\n\r\nexport function AskNav(props: { navItems: { title: string, url: string, options: { title: string, url: string }[] }[] }) {\r\n    const navigate = useNavigate()\r\n    return (\r\n        <div className=\"askNavDiv\">\r\n            <div className=\"allItems\">\r\n\r\n                <ul className=\"Ulnames\">\r\n                    {props.navItems.map((curr1, i) => (\r\n                        <li id='myLi' key={i}> {curr1.title} <FontAwesomeIcon icon={faCaretDown}></FontAwesomeIcon><ul className='optionUl'>\r\n                            {curr1.options.map((curr2, z) => (\r\n                                <li key={z}>\r\n                                    <div className='url' data-url={'/Ask/' + curr2.url}\r\n                                        onClick={() => { navigate('/Ask/' + curr2.url) }} >\r\n                                        {curr2.title}\r\n                                    </div>\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                        </li>\r\n                    ))}\r\n\r\n                </ul>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n// export function AskIcons(props: { navItems: { Icon: JSX.Element, url: string, options: { title: string, url: string }[] }[] }) {\r\n//     const navigate = useNavigate()\r\n\r\n//     function myFunction() {\r\n//         const myElement = document.getElementById('#links')!;\r\n\r\n//         myElement.classList.toggle(\"show\");\r\n\r\n//     }\r\n\r\n//     // // Close the dropdown menu if the user clicks outside of it\r\n//     // window.onclick = function (e: React.MouseEvent) {\r\n//     //     if (!event.target.matches('.dropicon')) {\r\n//     //         var dropdowns = document.getElementsByClassName(\"dropdown-content\");\r\n//     //         var i;\r\n//     //         for (i = 0; i < dropdowns.length; i++) {\r\n//     //             var openDropdown = dropdowns[i];\r\n//     //             if (openDropdown.classList.contains('show')) {\r\n//     //                 openDropdown.classList.remove('show');\r\n//     //             }\r\n//     //         }\r\n//     //     }\r\n//     // }\r\n//     return (\r\n\r\n//         <div className=\"divAroundAll\">\r\n//             <ul className='IconsUl'>\r\n//                 {props.navItems.map((curr1, i) => (\r\n//                     <li key={i}> {curr1.Icon} <FontAwesomeIcon className='dropicon' onClick={myFunction} icon={faCaretDown} /> <ul className='optionUl'>\r\n//                         {curr1.options.map((curr2, z) => (\r\n\r\n//                             <li id='links' key={z}>\r\n//                                 <a className='url' href='curr2.url'>\r\n//                                     {curr2.title}\r\n//                                 </a>\r\n//                             </li>\r\n//                         ))}\r\n//                     </ul>\r\n\r\n//                     </li>\r\n//                 ))}\r\n\r\n//             </ul>\r\n\r\n//         </div >\r\n//     )\r\n// }\r\nexport function AskIcons(props: { navItems: { Icon: JSX.Element, url: string, options: { title: string, url: string }[] }[] }) {\r\n    const navigate = useNavigate()\r\n\r\n    function myFunction() {\r\n        const myElement = document.getElementById('#links')!;\r\n\r\n        myElement.classList.toggle(\"show\");\r\n\r\n    }\r\n\r\n    // Close the dropdown menu if the user clicks outside of it\r\n    window.onclick = function (e: React.MouseEvent) {\r\n        if (!event.target.matches('.dropicon')) {\r\n            var dropdowns = document.getElementsByClassName(\"dropdown-content\");\r\n            var i;\r\n            for (i = 0; i < dropdowns.length; i++) {\r\n                var openDropdown = dropdowns[i];\r\n                if (openDropdown.classList.contains('show')) {\r\n                    openDropdown.classList.remove('show');\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return (\r\n\r\n        <Dropdown>\r\n            <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\r\n                Dropdown Button\r\n            </Dropdown.Toggle>\r\n\r\n            <Dropdown.Menu>\r\n                <Dropdown.Item href=\"#/action-1\">Action</Dropdown.Item>\r\n                <Dropdown.Item href=\"#/action-2\">Another action</Dropdown.Item>\r\n                <Dropdown.Item href=\"#/action-3\">Something else</Dropdown.Item>\r\n            </Dropdown.Menu>\r\n        </Dropdown>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}