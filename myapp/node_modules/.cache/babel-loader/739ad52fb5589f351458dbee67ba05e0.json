{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\final project\\\\my final perfect pro\\\\myapp\\\\src\\\\components\\\\post.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { MoreVert } from \"@material-ui/icons\";\nimport '../styles/Components/post.css';\nimport axios from \"axios\";\nimport { Star } from \"@material-ui/icons\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Post(props) {\n  _s();\n\n  var _props$postItems;\n\n  // const [like, setLike] = useState(props.postItems.like.length);\n  // const [isLiked, setIsLiked] = useState(false);\n  const [isOpen, setisOpen] = useState(false);\n  const [isopen, setisopen] = useState(false);\n  let [fetching, setFetch] = useState(true);\n  let Id = props.postItems.userId;\n  console.log(props.postItems.Comment);\n  let [comments, setcomments] = useState(props.postItems.Comment);\n  let [isOpencomments, setisOpencomments] = useState(false);\n  let [commentt, setcommentt] = useState({\n    nickname: \"\",\n    content: \"\",\n    commentId: \"\"\n  });\n  let url = 'http://127.0.0.1:5789/people/' + Id;\n  let url1 = 'http://127.0.0.1:5789/post/' + props.postItems.postId;\n  let url2 = 'http://127.0.0.1:5789/post/AddComment/' + props.postItems.userId + '/' + props.postItems.postId;\n  const [user, setuser] = useState({\n    nickname: \"\",\n    proCategory: \"\"\n  });\n  const [desc, setDesc] = useState('');\n  useEffect(() => {\n    console.log(props);\n    axios.get(url).then(response => {\n      setuser(response.data);\n      setFetch(false);\n    });\n  }, []);\n\n  const likeHandler = () => {// setLike(isLiked ? like + 1 : like - 1)\n    // setIsLiked(!isLiked)\n  };\n\n  const handleUpdate = () => {};\n\n  const handleDelete = () => {\n    axios.delete(url1, {\n      data: {\n        userId: Id\n      }\n    }).then(response => {\n      console.log(response.data);\n    });\n  };\n\n  console.log(url2);\n\n  const SendComment = () => {\n    const comment = {\n      nickname: \"sally\",\n      // logged user nickname - not done \n      content: desc,\n      commentId: JSON.stringify(props.postItems.Comment.length + 1)\n    };\n    axios.put(url2, {\n      comment\n    }).then(response => {\n      console.log(response.data);\n      comments.push(comment);\n      setcomments(comments);\n      setisOpencomments(true);\n      setcommentt(comment);\n    });\n  };\n\n  return fetching ? /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: \"loading\"\n  }, void 0, false) : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"aroundAll\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"postWrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"postTop\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"postTopLeft\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"postProfileImg\",\n              src: \"./images/anonymous.jpg\",\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"postUsername\",\n              children: user.nickname\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"postDate\",\n              children: (_props$postItems = props.postItems) === null || _props$postItems === void 0 ? void 0 : _props$postItems.date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"postTopRight\",\n            children: [props.postItems.Askpro && /*#__PURE__*/_jsxDEV(Star, {\n              htmlColor: \"green\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(MoreVert, {\n              onClick: () => {\n                setisopen(isopen ? false : true);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 33\n            }, this), isopen && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                  onClick: () => {\n                    handleUpdate();\n                  },\n                  children: \" edit \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  onClick: () => {\n                    handleDelete();\n                  },\n                  children: \"delete \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"postCenter\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"postImg\",\n            src: props.postItems.img\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" \", props.postItems.desc, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"postBottom\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"postBottomLeft\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"likeIcon\",\n              src: \"./images/like.png\",\n              onClick: likeHandler,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"likeIcon\",\n              src: \"./images/heart.png\",\n              onClick: likeHandler,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 29\n          }, this), (user.proCategory !== \"\" && props.postItems.Askpro || user.proCategory === \"\" && !props.postItems.Askpro) && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"postBottomRight\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              onClick: () => {\n                setisOpen(isOpen ? false : true);\n              },\n              className: \"postCommentText\",\n              children: [props.postItems.Comment.length, \" comments\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 33\n          }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [comments.map((curr, i) => /*#__PURE__*/_jsxDEV(Comment, {\n              commentItems: curr\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 41\n            }, this)), isOpencomments && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: commentt.map((curr, i) => /*#__PURE__*/_jsxDEV(Comment, {\n                commentItems: curr\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 49\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Add comment\",\n              onChange: event => setDesc(event.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                SendComment();\n              },\n              children: \"send \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 13\n  }, this);\n}\n\n_s(Post, \"vmw5dNO9R1z+aoCCvCsafqZvbOY=\");\n\n_c = Post;\n\nfunction Comment(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: props.commentItems.nickname\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      defaultValue: props.commentItems.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 185,\n    columnNumber: 9\n  }, this);\n}\n\n_c2 = Comment;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Post\");\n$RefreshReg$(_c2, \"Comment\");","map":{"version":3,"sources":["C:/Users/USER/Desktop/final project/my final perfect pro/myapp/src/components/post.tsx"],"names":["useEffect","useState","MoreVert","axios","Star","Post","props","isOpen","setisOpen","isopen","setisopen","fetching","setFetch","Id","postItems","userId","console","log","Comment","comments","setcomments","isOpencomments","setisOpencomments","commentt","setcommentt","nickname","content","commentId","url","url1","postId","url2","user","setuser","proCategory","desc","setDesc","get","then","response","data","likeHandler","handleUpdate","handleDelete","delete","SendComment","comment","JSON","stringify","length","put","push","date","Askpro","img","map","curr","i","event","target","value","commentItems"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\"\r\nimport { MoreVert } from \"@material-ui/icons\";\r\nimport '../styles/Components/post.css'\r\nimport axios from \"axios\";\r\nimport { Star } from \"@material-ui/icons\";\r\nimport { getId } from \"../configstore\";\r\n\r\nexport function Post(props: { postItems: { postId: string, userId: string, desc: string, like: Array<any>, Comment: Array<any>, date: string, img: string, Askpro: Boolean } }) {\r\n\r\n    // const [like, setLike] = useState(props.postItems.like.length);\r\n    // const [isLiked, setIsLiked] = useState(false);\r\n    const [isOpen, setisOpen] = useState(false);\r\n    const [isopen, setisopen] = useState(false);\r\n    let [fetching, setFetch] = useState(true);\r\n    let Id = props.postItems.userId;\r\n    console.log(props.postItems.Comment);\r\n    let [comments, setcomments] = useState(props.postItems.Comment);\r\n    let [isOpencomments, setisOpencomments] = useState(false);\r\n    let [commentt, setcommentt] = useState(\r\n        {\r\n            nickname: \"\",\r\n            content: \"\",\r\n            commentId: \"\"\r\n        }\r\n    );\r\n\r\n\r\n    let url = 'http://127.0.0.1:5789/people/' + Id;\r\n    let url1 = 'http://127.0.0.1:5789/post/' + props.postItems.postId;\r\n    let url2 = 'http://127.0.0.1:5789/post/AddComment/' + props.postItems.userId + '/' + props.postItems.postId\r\n\r\n    const [user, setuser] = useState({\r\n        nickname: \"\",\r\n        proCategory: \"\",\r\n    })\r\n    const [desc, setDesc] = useState('');\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        console.log(props);\r\n\r\n        axios.get(url)\r\n            .then(response => {\r\n\r\n                setuser(response.data)\r\n                setFetch(false)\r\n            });\r\n    }, [])\r\n\r\n\r\n    const likeHandler = () => {\r\n        // setLike(isLiked ? like + 1 : like - 1)\r\n        // setIsLiked(!isLiked)\r\n    }\r\n\r\n    const handleUpdate = () => {\r\n\r\n    }\r\n\r\n    const handleDelete = () => {\r\n\r\n        axios.delete(url1, {\r\n            data: {\r\n                userId: Id\r\n            }\r\n        })\r\n            .then(response => {\r\n                console.log(response.data);\r\n\r\n            });\r\n    }\r\n    console.log(url2);\r\n\r\n    const SendComment = () => {\r\n        const comment = {\r\n            nickname: \"sally\", // logged user nickname - not done \r\n            content: desc,\r\n            commentId: JSON.stringify(props.postItems.Comment.length + 1)\r\n        }\r\n\r\n        axios.put(url2, {\r\n            comment\r\n        })\r\n            .then(response => {\r\n                console.log(response.data);\r\n                comments.push(comment);\r\n                setcomments(comments);\r\n                setisOpencomments(true);\r\n                setcommentt(comment);\r\n\r\n            });\r\n\r\n\r\n    }\r\n\r\n\r\n    return fetching ? (<>loading</>) :\r\n        (\r\n            <div className=\"aroundAll\">\r\n                <div className=\"post\">\r\n                    <div className=\"postWrapper\">\r\n                        <div className=\"postTop\">\r\n                            <div className=\"postTopLeft\">\r\n                                <img\r\n                                    className=\"postProfileImg\"\r\n                                    src=\"./images/anonymous.jpg\"\r\n                                    alt=\"\"\r\n                                />\r\n                                <span className=\"postUsername\">\r\n                                    {user.nickname}\r\n\r\n                                </span>\r\n                                <span className=\"postDate\">{props.postItems?.date}</span>\r\n                            </div>\r\n                            <div className=\"postTopRight\">\r\n                                {props.postItems.Askpro &&\r\n                                    <Star htmlColor=\"green\" />\r\n                                }\r\n                                <MoreVert onClick={() => { setisopen(isopen ? false : true) }} />\r\n                                {isopen &&\r\n                                    <div>\r\n                                        <ul>\r\n                                            <li onClick={() => { handleUpdate() }}> edit </li>\r\n                                            <li onClick={() => { handleDelete() }}>delete </li>\r\n                                        </ul>\r\n                                    </div>\r\n                                }\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"postCenter\">\r\n                            <img className=\"postImg\" src={props.postItems.img} />\r\n                            {/* <input type=\"text\" defaultValue={props.postItems.desc} /> */}\r\n                            <p> {props.postItems.desc} </p>\r\n\r\n                        </div>\r\n                        <div className=\"postBottom\">\r\n                            <div className=\"postBottomLeft\">\r\n                                <img className=\"likeIcon\" src=\"./images/like.png\" onClick={likeHandler} alt=\"\" />\r\n                                <img className=\"likeIcon\" src=\"./images/heart.png\" onClick={likeHandler} alt=\"\" />\r\n                                {/* <span className=\"postLikeCounter\">{like} people like it</span> */}\r\n                            </div>\r\n                            {(user.proCategory !== \"\" && props.postItems.Askpro || user.proCategory === \"\" && !props.postItems.Askpro) &&\r\n                                <div className=\"postBottomRight\">\r\n                                    <span onClick={() => { setisOpen(isOpen ? false : true) }} className=\"postCommentText\">{props.postItems.Comment.length} comments</span>\r\n                                </div>\r\n                            }\r\n                            {isOpen &&\r\n                                <div>\r\n                                    {comments.map((curr, i) => (\r\n\r\n                                        <Comment key={i} commentItems={curr} />\r\n\r\n                                    ))\r\n                                    }\r\n\r\n                                    {isOpencomments &&\r\n                                        <div>\r\n                                            {commentt.map((curr, i) => (\r\n\r\n                                                <Comment key={i} commentItems={curr} />\r\n\r\n                                            ))\r\n                                            }\r\n                                        </div>\r\n                                    }\r\n\r\n                                    <input type=\"text\" placeholder=\"Add comment\" onChange={event => setDesc(event.target.value)} />\r\n                                    <button onClick={() => { SendComment() }}>send </button>\r\n\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n}\r\n\r\n\r\n\r\nfunction Comment(props: { commentItems: { nickname: string, content: string, commentId: string } }) {\r\n    return (\r\n        <div>\r\n            <span >\r\n                {props.commentItems.nickname}\r\n\r\n            </span>\r\n            <input defaultValue={props.commentItems.content} />\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}