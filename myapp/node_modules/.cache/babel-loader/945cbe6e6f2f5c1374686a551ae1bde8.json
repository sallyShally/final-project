{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\final project\\\\my final perfect pro\\\\myapp\\\\src\\\\pages\\\\feed.tsx\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport { Post } from './post';\nimport { Share } from './share';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Feed() {\n  _s();\n\n  let [Posts, setPosts] = useState([{\n    id: \"\",\n    userId: \"\",\n    desc: \"\",\n    like: [],\n    comments: [],\n    date: \"\",\n    img: \"\",\n    Askpro: false\n  }]);\n  let [fetching, setFetch] = useState(true);\n  let url = 'http://127.0.0.1:5789/post/myChild';\n  useEffect(() => {\n    axios.get(url).then(response => {\n      console.log(response.data);\n      setPosts(response.data);\n      setFetch(false);\n    });\n  }, []);\n  return fetching ? /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: \"Loading\"\n  }, void 0, false) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [localStorage.getItem(\"idLogged\") !== \"\" && /*#__PURE__*/_jsxDEV(Share, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 21\n    }, this), Posts.map((curr, i) => /*#__PURE__*/_jsxDEV(Post, {\n      postItems: curr\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 21\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 13\n  }, this);\n}\n\n_s(Feed, \"OHCNVMhBIO+RcawUfcAoHKM+h1w=\");\n\n_c = Feed;\n\nvar _c;\n\n$RefreshReg$(_c, \"Feed\");","map":{"version":3,"sources":["C:/Users/USER/Desktop/final project/my final perfect pro/myapp/src/pages/feed.tsx"],"names":["axios","useEffect","useState","Post","Share","Feed","Posts","setPosts","id","userId","desc","like","comments","date","img","Askpro","fetching","setFetch","url","get","then","response","console","log","data","localStorage","getItem","map","curr","i"],"mappings":";;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,SAASC,KAAT,QAAsB,SAAtB;;;AAEA,OAAO,SAASC,IAAT,GAAgB;AAAA;;AACnB,MAAI,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,CAAC;AAAEM,IAAAA,EAAE,EAAE,EAAN;AAAUC,IAAAA,MAAM,EAAE,EAAlB;AAAsBC,IAAAA,IAAI,EAAE,EAA5B;AAAgCC,IAAAA,IAAI,EAAE,EAAtC;AAA0CC,IAAAA,QAAQ,EAAE,EAApD;AAAwDC,IAAAA,IAAI,EAAE,EAA9D;AAAkEC,IAAAA,GAAG,EAAE,EAAvE;AAA2EC,IAAAA,MAAM,EAAE;AAAnF,GAAD,CAAD,CAAhC;AACA,MAAI,CAACC,QAAD,EAAWC,QAAX,IAAuBf,QAAQ,CAAC,IAAD,CAAnC;AACA,MAAIgB,GAAG,GAAG,oCAAV;AAEAjB,EAAAA,SAAS,CAAC,MAAM;AACZD,IAAAA,KAAK,CAACmB,GAAN,CAAUD,GAAV,EACKE,IADL,CACUC,QAAQ,IAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AAEAjB,MAAAA,QAAQ,CAACc,QAAQ,CAACG,IAAV,CAAR;AACAP,MAAAA,QAAQ,CAAC,KAAD,CAAR;AACH,KANL;AAOH,GARQ,EAQN,EARM,CAAT;AAUA,SAAOD,QAAQ,gBAAI;AAAA;AAAA,mBAAJ,gBAEP;AAAA,eACKS,YAAY,CAACC,OAAb,CAAqB,UAArB,MAAqC,EAArC,iBACG,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,YAFR,EAMKpB,KAAK,CAACqB,GAAN,CAAU,CAACC,IAAD,EAAOC,CAAP,kBAEP,QAAC,IAAD;AAAc,MAAA,SAAS,EAAED;AAAzB,OAAWC,CAAX;AAAA;AAAA;AAAA;AAAA,YAFH,CANL;AAAA;AAAA;AAAA;AAAA;AAAA,UAFR;AAeH;;GA9BexB,I;;KAAAA,I","sourcesContent":["\r\nimport axios from 'axios';\r\nimport { useEffect, useState } from 'react';\r\nimport { Post } from './post'\r\nimport { Share } from './share'\r\n\r\nexport function Feed() {\r\n    let [Posts, setPosts] = useState([{ id: \"\", userId: \"\", desc: \"\", like: [], comments: [], date: \"\", img: \"\", Askpro: false }]);\r\n    let [fetching, setFetch] = useState(true);\r\n    let url = 'http://127.0.0.1:5789/post/myChild';\r\n\r\n    useEffect(() => {\r\n        axios.get(url)\r\n            .then(response => {\r\n                console.log(response.data);\r\n\r\n                setPosts(response.data);\r\n                setFetch(false);\r\n            });\r\n    }, [])\r\n\r\n    return fetching ? (<>Loading</>) :\r\n        (\r\n            <div>\r\n                {localStorage.getItem(\"idLogged\") !== \"\" &&\r\n                    <Share />\r\n\r\n                }\r\n\r\n                {Posts.map((curr, i) => (\r\n\r\n                    <Post key={i} postItems={curr} />\r\n\r\n                ))}\r\n            </div>\r\n        )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}